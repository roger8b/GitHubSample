apply plugin: "jacoco"

jacoco {
    toolVersion "0.8.2"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    // what to exclude from coverage report
    // UI, "noise", generated classes, platform classes, etc.
    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*Fragment.*',
            '**/*Activity.*',
            "**/data/model/*",
            "**/data/remote/*",
            "**/di/*",
            "**/domain/*",
            "**/presentation/home/*",

    ]

    // generated classes
    classDirectories = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: excludes
    ) + fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: excludes
    )

    // sources
    sourceDirectories.from = files([
            android.sourceSets.main.java.srcDirs,
            "$project.projectDir/src/main/java"
    ])
    executionData.from = fileTree(dir: project.buildDir, includes: ['jacoco/testDebugUnitTest.exec'])
}

